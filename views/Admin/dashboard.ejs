<%- include('../Layouts/adminHeader.ejs') %>
    <!-- End Navbar -->
    <div class="container-fluid py-4">
      <div class="row">
        <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
          <div class="card">
            <div class="card-header p-3 pt-2">
              <div class="icon icon-lg icon-shape bg-gradient-success shadow-success text-center border-radius-xl mt-n4 position-absolute">
                  <i class="material-icons opacity-10">bar_chart</i> <!-- Icon for Count -->
              </div>
              <div class="text-end pt-1">
                  <p class="text-sm mb-0 text-capitalize">Overall Sales Count</p> <!-- Updated heading -->
                  <h4 class="mb-0"><%= stats.overallSalesCount %></h4>
              </div>
          </div>          
              <hr class="dark horizontal my-0">
              <div class="card-footer p-3">
                  <p class="mb-0"><span class="text-success text-sm font-weight-bolder">+55% </span>than last week</p> <!-- Corrected typo "lask" to "last" -->
              </div>
          </div>
      </div>
      <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
          <div class="card">
              <div class="card-header p-3 pt-2">
                  <div class="icon icon-lg icon-shape bg-gradient-info shadow-info text-center border-radius-xl mt-n4 position-absolute">
                      <i class="material-icons opacity-10">trending_up</i> <!-- Changed icon -->
                  </div>
                  <div class="text-end pt-1">
                      <p class="text-sm mb-0 text-capitalize">Overall Order Amount</p> <!-- Updated heading -->
                      <h4 class="mb-0">₹ <%= stats.overallOrderAmount.toFixed(2) %></h4>
                  </div>
              </div>
              <hr class="dark horizontal my-0">
              <div class="card-footer p-3">
                  <p class="mb-0"><span class="text-success text-sm font-weight-bolder">+3% </span>than last month</p> <!-- Corrected typo "lask" to "last" -->
              </div>
          </div>
      </div>
      <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
          <div class="card">
              <div class="card-header p-3 pt-2">
                  <div class="icon icon-lg icon-shape bg-gradient-warning shadow-warning text-center border-radius-xl mt-n4 position-absolute">
                      <i class="material-icons opacity-10">people</i> <!-- Changed icon -->
                  </div>
                  <div class="text-end pt-1">
                      <p class="text-sm mb-0 text-capitalize">Overall Discount</p> <!-- Updated heading -->
                      <h4 class="mb-0">₹ <%= stats.overallDiscount.toFixed(2) %></h4>
                  </div>
              </div>
              <hr class="dark horizontal my-0">
              <div class="card-footer p-3">
                  <p class="mb-0"><span class="text-danger text-sm font-weight-bolder">-2%</span> than yesterday</p>
              </div>
          </div>
      </div>
      <div class="col-xl-3 col-sm-6">
          <div class="card">
            <div class="card-header p-3 pt-2">
              <div class="icon icon-lg icon-shape bg-gradient-danger shadow-danger text-center border-radius-xl mt-n4 position-absolute">
                  <i class="material-icons opacity-10">attach_money</i> <!-- Icon for Revenue -->
              </div>
              <div class="text-end pt-1">
                  <p class="text-sm mb-0 text-capitalize">Revenue</p>
                  <h4 class="mb-0">₹ <%= stats.overallRevenue %></h4>
              </div>
          </div>
              <hr class="dark horizontal my-0">
              <div class="card-footer p-3">
                  <p class="mb-0"><span class="text-success text-sm font-weight-bolder">+5% </span>than yesterday</p>
              </div>
          </div>
      </div>

<!-- Single Sales Report Graph with Filter -->
<div class="row mt-4">
  <div class="col-lg-12 col-md-12 mt-4 mb-4">
    <div class="card z-index-2">
      <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2 bg-transparent">
        <div id="card-background" class="bg-gradient-primary shadow-primary border-radius-lg py-3 pe-1">
          <div class="d-flex justify-content-between align-items-center">
            <!-- Dynamic Heading -->
            <h6 id="chart-heading" class="mb-0 ms-4 text-white text-center flex-grow-1"> Daily Sales Report</h6>
          </div>
          <div class="chart mt-3">
            <canvas id="sales-chart" class="chart-canvas" height="300"></canvas>
          </div>
        </div>
      </div>
      
      <div class="card-body" style="position: relative;">
        <!-- Filter Select Box with Inline Styles for Positioning -->
        <select id="sales-filter" 
                style="
                  position: absolute; 
                  top: 10px; 
                  right: 0; 
                  background-color:  #e5870c;;
                  color: white; /* White text */
                  border: none; /* Remove border */
                  padding: 10px 20px; /* Padding */
                  font-size: 16px; /* Font size */
                  margin-right: 17px;
                  border-radius: 4px; /* Rounded corners */
                  appearance: none; /* Remove default styling */
                  background-repeat: no-repeat; 
                  background-position: right 0.75rem center; 
                  background-size: 1.5rem 1.5rem; 
                  z-index: 1;
                ">
          <option value="daily">Daily</option>
          <option value="weekly">Weekly</option>
          <option value="monthly">Monthly</option>
          <option value="yearly">Yearly</option>
        </select>
      </div>
      
        
        <!-- Custom Dates -->
        <div id="custom-dates" class="d-none mt-3">
          <label for="start-date" class="form-label text-white">Start Date</label>
          <input type="date" id="start-date" class="form-control mb-2" />
          <label for="end-date" class="form-label text-white">End Date</label>
          <input type="date" id="end-date" class="form-control mb-2" />
        </div>

        <!-- Update Info -->
        <div class="d-flex align-items-center">
          <a href="/admin/most-ordered" style="background-color: #4CAF50; color: white; border: none; padding: 10px 20px; margin-left: 17px; text-align: center; text-decoration: none; display: inline-block; font-size: 16px; margin: 10px 40px 15px; cursor: pointer; border-radius: 4px;">
            Best Selling
        </a>
        
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Include Chart.js -->
<script src="/Admin/js/plugins/chartjs.min.js"></script>
<script>
  var ctx = document.getElementById("sales-chart").getContext("2d");
  var salesChart = new Chart(ctx, {
      type: "line",
      data: {
          labels: [],
          datasets: [{
              label: "Sales",
              tension: 0.4,
              borderWidth: 0,
              borderRadius: 4,
              borderSkipped: false,
              backgroundColor: "rgba(255, 255, 255, .8)",
              borderColor: "rgba(255, 255, 255, .8)",
              borderWidth: 4,
              data: [],
              maxBarThickness: 6
          }],
      },
      options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
              legend: {
                  display: false,
              }
          },
          interaction: {
              intersect: false,
              mode: 'index',
          },
          scales: {
              y: {
                  grid: {
                      drawBorder: false,
                      display: true,
                      drawOnChartArea: true,
                      drawTicks: false,
                      borderDash: [5, 5],
                      color: 'rgba(255, 255, 255, .2)'
                  },
                  ticks: {
                      suggestedMin: 0,
                      suggestedMax: 1000,
                      beginAtZero: true,
                      padding: 10,
                      font: {
                          size: 14,
                          weight: 300,
                          family: "Roboto",
                          style: 'normal',
                          lineHeight: 2
                      },
                      color: "#fff"
                  },
              },
              x: {
                  grid: {
                      drawBorder: false,
                      display: true,
                      drawOnChartArea: true,
                      drawTicks: false,
                      borderDash: [5, 5],
                      color: 'rgba(255, 255, 255, .2)'
                  },
                  ticks: {
                      display: true,
                      color: '#f8f9fa',
                      padding: 10,
                      font: {
                          size: 14,
                          weight: 300,
                          family: "Roboto",
                          style: 'normal',
                          lineHeight: 2
                      },
                  }
              },
          },
      },
  });

  async function updateChart(filter) {
      try {
          const startDate = document.getElementById("start-date").value;
          const endDate = document.getElementById("end-date").value;
          const url = `/admin/sales-data-stats?filter=${filter}${filter === 'custom' ? `&startDate=${startDate}&endDate=${endDate}` : ''}`;

          console.log("Fetching URL: ", url);

          const response = await fetch(url);
          const result = await response.json();

          if (!response.ok) {
              throw new Error(result.error || 'Failed to fetch data');
          }

          var cardBackground = document.getElementById("card-background");
          var heading = document.getElementById("chart-heading");

          salesChart.data.labels = result.labels || [];
          salesChart.data.datasets[0].data = result.data || [];

          switch (filter) {
              case "daily":
                  heading.textContent = "Daily Sales Report";
                  cardBackground.className = "bg-gradient-primary shadow-primary border-radius-lg py-3 pe-1";
                  salesChart.data.datasets[0].backgroundColor = "rgba(255, 255, 255, .8)";
                  salesChart.data.datasets[0].borderColor = "rgba(255, 255, 255, .8)";
                  break;
              case "weekly":
                  heading.textContent = "Weekly Sales Report";
                  cardBackground.className = "bg-gradient-secondary shadow-secondary border-radius-lg py-3 pe-1";
                  salesChart.data.datasets[0].backgroundColor = "rgba(0, 0, 255, .8)";
                  salesChart.data.datasets[0].borderColor = "rgba(0, 255, 0, .8)"; // Example color
                  
                  break;
              case "monthly":
                  heading.textContent = "Monthly Sales Report";
                  cardBackground.className = "bg-gradient-warning shadow-warning border-radius-lg py-3 pe-1";
                  salesChart.data.datasets[0].backgroundColor = "rgba(255, 255, 0, .8)"; // Yellow color
              
                  salesChart.data.datasets[0].borderColor = "rgba(0, 0, 255, .8)"; // Example color
                  break;
              case "yearly":
                  heading.textContent = "Yearly Sales Report";
                  cardBackground.className = "bg-gradient-success shadow-success border-radius-lg py-3 pe-1";
                  salesChart.data.datasets[0].backgroundColor = "rgba(0, 255, 0, .8)"; // Example color
                  salesChart.data.datasets[0].borderColor = "rgba(255, 255, 0, .8)"; // Yellow color
                  break;
              case "custom":
                  heading.textContent = "Custom Date Sales Report";
                  cardBackground.className = "bg-gradient-info shadow-info border-radius-lg py-3 pe-1";
                  salesChart.data.datasets[0].backgroundColor = "rgba(0, 255, 255, .8)"; // Example color
                  salesChart.data.datasets[0].borderColor = "rgba(0, 255, 255, .8)"; // Example color
                  break;
              default:
                  heading.textContent = "Daily Sales Report";
                  cardBackground.className = "bg-gradient-primary shadow-primary border-radius-lg py-3 pe-1";
                  salesChart.data.datasets[0].backgroundColor = "rgba(255, 255, 255, .8)";
                  salesChart.data.datasets[0].borderColor = "rgba(255, 255, 255, .8)";
          }

          salesChart.update();
      } catch (error) {
          console.error('Error fetching sales data:', error);
      }
  }

  document.getElementById("sales-filter").addEventListener("change", function() {
      var filter = this.value;
      var customDates = document.getElementById("custom-dates");
      if (filter === "custom") {
          customDates.classList.remove("d-none");
      } else {
          customDates.classList.add("d-none");
      }
      updateChart(filter);
  });

  document.addEventListener("DOMContentLoaded", function() {
      updateChart('daily'); // Set default to 'daily'
  });
</script>

<style>

.border {
  border: 1px solid #ddd; /* Light border color */
}

.rounded {
  border-radius: .375rem; /* Rounded corners */
}

.p-3 {
  padding: 1rem; /* Padding around the content */
}

.bg-light {
  background-color: #f8f9fa; /* Light background color */
}

</style>




<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.6.0/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.17/jspdf.plugin.autotable.min.js"></script>
 



<!-- Sales Report Table -->
<div class="container">
  <div class="row mb-4">
    <!-- Main Content: Sales Report -->
    <div class="col-lg-8 col-md-6 mb-md-0 mb-4">
      <div class="card h-100">
        <div class="card-header pb-0">
          <div class="row">
            <div class="col-lg-6 col-7">
              <h3>Sales Report</h3>
            </div>
            <div class="col-lg-6 col-12 my-auto">
              <div class="d-flex align-items-center justify-content-start border rounded p-3 bg-light">
                <label for="dateFrom" class="form-label text-secondary">From</label>
                <input type="date" id="dateFrom" class="form-control form-control-sm mb-2">
                <label for="dateTill" class="form-label text-secondary">Till</label>
                <input type="date" id="dateTill" class="form-control form-control-sm mb-2">
              </div>
            </div>
            <button type="button" id="getReportButton" class="btn btn-primary btn-sm ms-3" style="width: 110px;">Get Report</button>
          </div>
        </div>
        <div class="card-body px-0 pb-2">
          <div class="table-responsive">
            <table class="table align-items-center mb-0">
              <thead>
                <tr>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 text-center">Order Id</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 text-center ps-2">Name</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 text-center">Total</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 text-center">Coupon Discount</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 text-center">Date</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 text-center">Payment</th>
                </tr>
              </thead>
              <tbody id="salesReportTableBody">
                <!-- Dynamic rows will be inserted here -->
              </tbody>
            </table>
          </div>
        </div>
        <!-- Pagination Container -->
        <div class="pagination-container">
          <ul id="pagination" class="pagination"></ul>
        </div>
      </div>
    </div>

    <!-- Sidebar or Additional Content -->
    <div class="col-lg-4 col-md-6">
      <div class="card h-100">
        <!-- Transaction Details -->
        <div class="card-body">
          <div class="transaction-details mb-4">
            <h6 class="text-dark font-weight-bold mb-3">Transaction Details</h6>
            <ul class="list-unstyled mb-4" id="transactionDetails">
              <li class="d-flex justify-content-between py-2">
                <span>Total Amount:</span>
                <span id="totalAmount">₹ 0</span>
              </li>
              <li class="d-flex justify-content-between py-2">
                <span>Total Sales:</span>
                <span id="totalSales">0</span>
              </li>
              <li class="d-flex justify-content-between py-2">
                <span>Total Coupon Discount:</span>
                <span id="totalCouponDiscount">₹ 0</span>
              </li>
              <li class="d-flex justify-content-between py-2">
                <span>Total Payment:</span>
                <span id="totalPayment">₹ 0</span>
              </li>
            </ul>

            <!-- Download Report Button -->
            <div class="text-center">
              <button type="button" onclick="generatePDF()" id="downloadPDFButton" class="btn btn-primary btn-sm ms-3" style="width: 110px;">Download Report</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Hidden content for PDF generation -->
<div id="pdf-content" style="display: none;">
  <h3>Sales Report</h3>
  <p id="pdf-date-range"></p>
  <table>
    <thead>
      <tr>
        <th>Order Id</th>
        <th>Name</th>
        <th>Total</th>
        <th>Coupon Discount</th>
        <th>Date</th>
        <th>Payment</th>
      </tr>
    </thead>
    <tbody id="pdf-table-body">
      <!-- Rows will be added dynamically -->
    </tbody>
  </table>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.min.js"></script>

<script>
  let orders = []; // Store fetched orders globally
  const itemsPerPage = 8; // Number of items per page

  // Fetch and display report data
  $('#getReportButton').click(async () => {
    const dateFrom = $('#dateFrom').val();
    const dateTill = $('#dateTill').val();

    if (dateFrom && dateTill) {
      try {
        const response = await fetch(`/admin/salesReport?dateFrom=${dateFrom}&dateTill=${dateTill}`, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          }
        });

        if (response.ok) {
          const data = await response.json();
          orders = data.orders; // Store orders
          updateSalesReportTable(1); // Show first page of orders
          updateTransactionDetails(data.transactionDetails);
        } else {
          console.error('Failed to fetch sales report data');
        }
      } catch (error) {
        console.error('Error fetching sales report data:', error);
      }
    } else {
      alert('Please select both dates');
    }
  });

  // Update the sales report table
  function updateSalesReportTable(pageNum) {
    const tbody = $('#salesReportTableBody');
    tbody.empty(); // Clear existing rows

    const startIndex = (pageNum - 1) * itemsPerPage;
    const endIndex = startIndex + itemsPerPage;
    const pageOrders = orders.slice(startIndex, endIndex);

    pageOrders.forEach(order => {
      const totalAfterDiscount = parseFloat(order.totalAmount).toFixed(2);
      const discountApplied = parseFloat(order.discountApplied).toFixed(2);
      const totalAmount = (parseFloat(order.totalAmount) + parseFloat(order.discountApplied)).toFixed(2);
      const createdAt = new Date(order.createdAt).toLocaleDateString();

      const row = `
        <tr>
          <td class="text-center align-middle text-sm"><span class="text-xs font-weight-bold">${order.orderId}</span></td>
          <td class="text-center align-middle text-sm"><span class="text-xs font-weight-bold">${order.deliveryAddress?.name || 'N/A'}</span></td>
          <td class="text-center align-middle text-sm"><span class="text-xs font-weight-bold">₹ ${totalAmount}</span></td>
          <td class="text-center align-middle text-sm"><span class="text-xs font-weight-bold">₹ ${discountApplied}</span></td>
          <td class="text-center align-middle text-sm"><span class="text-xs font-weight-bold">${createdAt}</span></td>
          <td class="text-center align-middle text-sm"><span class="text-xs font-weight-bold">₹ ${totalAfterDiscount}</span></td>
        </tr>
      `;
      tbody.append(row);
    });

    // Update pagination
    const numPages = Math.ceil(orders.length / itemsPerPage);
    updatePagination(numPages, pageNum);
  }

  // Update transaction details
  function updateTransactionDetails(details) {
    $('#totalAmount').text(`₹ ${parseFloat(details.totalAmount).toFixed(2)}`);
    $('#totalSales').text(details.totalSales);
    $('#totalCouponDiscount').text(`₹ ${parseFloat(details.totalCouponDiscount).toFixed(2)}`);
    $('#totalPayment').text(`₹ ${parseFloat(details.totalPayment).toFixed(2)}`);
  }

  // Update pagination
  function updatePagination(numPages, currentPage) {
    const pagination = $('#pagination');
    pagination.empty(); // Clear existing pagination

    for (let i = 1; i <= numPages; i++) {
      const pageItem = `
        <li class="page-item ${i === currentPage ? 'active' : ''}">
          <a class="page-link" href="#" data-page="${i}">${i}</a>
        </li>
      `;
      pagination.append(pageItem);
    }

    // Handle page click
    $('#pagination a').click(function(event) {
      event.preventDefault();
      const page = $(this).data('page');
      updateSalesReportTable(page);
    });
  }



function generatePDF() {
  // Get selected date range
  const dateFrom = $('#dateFrom').val();
  const dateTill = $('#dateTill').val();

  // Ensure dates are selected
  if (!dateFrom || !dateTill) {
    alert('Please select both dates.');
    return;
  }

  // Update the hidden PDF content
  const pdfContent = document.querySelector('#pdf-content');
  const pdfDateRange = document.querySelector('#pdf-date-range');
  const pdfTableBody = document.querySelector('#pdf-table-body');

  if (!pdfContent || !pdfDateRange || !pdfTableBody) {
    console.error('PDF content or its sub-elements not found');
    return;
  }

  pdfDateRange.textContent = `From ${dateFrom} to ${dateTill}`;

  // Clear existing rows
  pdfTableBody.innerHTML = '';

  // Check if orders have data
  if (orders.length === 0) {
    pdfTableBody.innerHTML = '<tr><td colspan="6">No data available</td></tr>';
    return;
  }

  // Add all rows to the PDF table
  orders.forEach(order => {
    const totalAfterDiscount = parseFloat(order.totalAmount).toFixed(2);
    const discountApplied = parseFloat(order.discountApplied).toFixed(2);
    const totalAmount = (parseFloat(order.totalAmount) + parseFloat(order.discountApplied)).toFixed(2);
    const createdAt = new Date(order.createdAt).toLocaleDateString();

    const row = `
      <tr>
        <td>${order.orderId}</td>
        <td>${order.deliveryAddress?.name || 'N/A'}</td>
        <td>₹ ${totalAmount}</td>
        <td>₹ ${discountApplied}</td>
        <td>${createdAt}</td>
        <td>₹ ${totalAfterDiscount}</td>
      </tr>
    `;
    pdfTableBody.innerHTML += row;
  });

  // Log the content to debug
  console.log('PDF Content:', pdfContent.innerHTML);

  // Set PDF options
  const options = {
    margin: [0.5, 0.5, 0.5, 0.5], // Margins in inches
    filename: 'sales-report.pdf',
    image: { type: 'jpeg', quality: 0.98 },
    html2canvas: { scale: 2 },
    jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' }
  };

  // Generate the PDF
  html2pdf().from(pdfContent).set(options).save().then(() => {
    console.log('PDF generated successfully');
  }).catch(error => {
    console.error('Error generating PDF:', error);
  });
}


</script>





<style>
  .pagination-container {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 20px;
  }

  .pagination {
    display: flex;
    justify-content: center;
    list-style: none;
    padding: 0;
  }

  .pagination .page-item {
    margin: 0 5px;
  }

  .pagination .page-link {
    color: #81c408; /* Link color */
    text-decoration: none;
  }

  .pagination .page-item.active .page-link {
    background-color: #d63384; /* Active page background color */
    color: white; /* Active page text color */
  }
</style>




<%- include('../Layouts/adminFooter.ejs') %>