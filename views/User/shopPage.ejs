 
 <%- include('../Layouts/header.ejs') %>
        
        <!-- Single Page Header start -->
        <div class="container-fluid page-header py-5">
            <h1 class="text-center text-white display-6">Shop</h1>
            <ol class="breadcrumb justify-content-center mb-0">
                <li class="breadcrumb-item"><a href="#">Home</a></li>
                <li class="breadcrumb-item"><a href="#">Pages</a></li>
                <li class="breadcrumb-item active text-white">Shop</li>
            </ol>
        </div>
        <!-- Single Page Header End -->


        <!-- Fruits Shop Start-->
        <div class="container-fluid fruite py-5">
            <div class="container py-5">
                <h1 class="mb-4">Fresh fruits shop</h1>
                <div class="row g-4">
                    <div class="col-lg-12">
                        <div class="row g-4">
                            <div class="col-xl-3">
                                <div class="input-group w-100 mx-auto d-flex">
                                    <input id="shop-search-input" type="search" class="form-control p-3" placeholder="keywords" aria-describedby="search-icon-1">
                                    <span id="shop-search-button" class="input-group-text p-3"><i class="fa fa-search"></i></span>
                                </div>
                            </div>
                            <div class="col-6"></div>
                            <div class="col-xl-3">
                                <div class="bg-light ps-3 py-3 rounded d-flex justify-content-between mb-4">
                                    <label for="sort">Please sort by</label>
                                    <select id="sort" name="sortlist" class="border-0 form-select-sm bg-light me-3" >
                                        <option value="sort">Sort Here..</option>
                                        <option value="AtoZ">A to Z</option>
                                        <option value="ZtoA">Z to A</option>
                                        <option value="PriceHighToLow">Price High to low</option>
                                        <option value="PriceLowToHigh">Price Low to high</option>
                                    </select>
                                </div>
                            </div>
                                        
                        </div>
                        <div class="row g-4">
                            <div class="col-lg-3">
                                <div class="row g-4">
                                    <div class="col-lg-12">
                                        <div class="mb-3">
                                            <h4>Categories</h4>
                                            <ul class="list-unstyled fruite-categorie">
                                                <% category.forEach(category => { %>
                                                  <li>
                                                    <div class="d-flex justify-content-between fruite-name">
                                                        <a href="#" class="category-filter" data-category-id="<%= category._id %>">
                                                            <i class="fas fa-apple-alt me-2"></i><%= category.name %>
                                                        </a>
                                                      <span>(<%= category.productCount%>)</span>
                                                    </div>
                                                  </li>
                                                <% }) %>
                                            </ul>
                                        </div>
                                    </div>
                                    <div class="col-lg-12">
                                        <div class="mb-3">
                                            <h4 class="mb-2">Price</h4>
                                            <input type="range" class="form-range w-100" id="rangeInput" name="rangeInput" min="0" max="500" value="0" oninput="amount.value=rangeInput.value">
                                            <output id="amount" name="amount" min-velue="0" max-value="500" for="rangeInput">0</output>
                                        </div>
                                    </div>
                                    <div class="col-lg-12">
                                        <!-- <div class="mb-3">
                                            <h4>Additional</h4>
                                            <div class="mb-2">
                                                <input type="radio" class="me-2" id="Categories-1" name="Categories-1" value="Beverages">
                                                <label for="Categories-1"> higlight</label>
                                            </div>
                                            <div class="mb-2">
                                                <input type="radio" class="me-2" id="Categories-2" name="Categories-1" value="Beverages">
                                                <label for="Categories-2"> Fresh</label>
                                            </div>
                                            <div class="mb-2">
                                                <input type="radio" class="me-2" id="Categories-3" name="Categories-1" value="Beverages">
                                                <label for="Categories-3"> Sales</label>
                                            </div>
                                            <div class="mb-2">
                                                <input type="radio" class="me-2" id="Categories-4" name="Categories-1" value="Beverages">
                                                <label for="Categories-4"> Discount</label>
                                            </div>
                                            <div class="mb-2">
                                                <input type="radio" class="me-2" id="Categories-5" name="Categories-1" value="Beverages">
                                                <label for="Categories-5"> Expired</label>
                                            </div>
                                        </div> -->
                                    </div>
                                    <div class="col-lg-12">
                                        <!-- <h4 class="mb-3">Featured products</h4>
                                        <div class="d-flex align-items-center justify-content-start">
                                            <div class="rounded me-4" style="width: 100px; height: 100px;">
                                                <img src="img/featur-1.jpg" class="img-fluid rounded" alt="">
                                            </div>
                                            <div>
                                                <h6 class="mb-2">Big Banana</h6>
                                                <div class="d-flex mb-2">
                                                    <i class="fa fa-star text-secondary"></i>
                                                    <i class="fa fa-star text-secondary"></i>
                                                    <i class="fa fa-star text-secondary"></i>
                                                    <i class="fa fa-star text-secondary"></i>
                                                    <i class="fa fa-star"></i>
                                                </div>
                                                <div class="d-flex mb-2">
                                                    <h5 class="fw-bold me-2">2.99 $</h5>
                                                    <h5 class="text-danger text-decoration-line-through">4.11 $</h5>
                                                </div>
                                            </div>
                                        </div> -->
                                        
                                        
                                        <!-- <div class="d-flex justify-content-center my-4">
                                            <a href="#" class="btn border border-secondary px-4 py-3 rounded-pill text-primary w-100">Vew More</a>
                                        </div> -->
                                    </div>
                                    <div class="col-lg-12">
                                        <div class="position-relative">
                                            <img src="img/banner-fruits.jpg" class="img-fluid w-100 rounded" alt="">
                                            <div class="position-absolute" style="top: 50%; right: 10px; transform: translateY(-50%);">
                                                <h3 class="text-secondary fw-bold">Fresh <br> Fruits <br> Banner</h3>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-9">
                                <div class="row g-4 justify-content-center" id="product-list">
                              
                                  <% if (locals.products) { %>
                                    <% for (let i = 0; i < products.length; i++) { %>
                              
                                      <div class="col-md-6 col-lg-6 col-xl-4 product-item">
                                        <div class="rounded position-relative fruite-item">
                                          <div class="fruite-img">
                                            <a href="/productDetails/<%= products[i]._id %>">
                                              <img src="/uploads/<%= products[i].image[0] %>" class="img-fluid w-100 rounded-top" alt="product-img">
                                            </a>
                                          </div>
                                          <div class="text-white bg-secondary px-3 py-1 rounded position-absolute" style="top: 10px; left: 10px;"><%= products[i].category.name %></div>
                                          <div class="p-4 border border-secondary border-top-0 rounded-bottom">
                                            <a href="/productDetails/<%= products[i]._id %>">
                                              <h4><%= products[i].title %></h4>
                                            </a>
                                            <p><%= products[i].description %></p>
                                            <div class="d-flex justify-content-between flex-lg-wrap">
                                              <% if (products[i].salesPrice && products[i].salesPrice < products[i].regularPrice) { %>
                                                <p class="text-dark fs-5 fw-bold mb-0">
                                                  <span class="text-muted text-decoration-line-through">₹ <%= products[i].regularPrice %>/kg</span>
                                                  ₹ <%= products[i].salesPrice %> /kg
                                                </p>
                                              <% } else { %>
                                                <p class="text-dark fs-5 fw-bold mb-0"> ₹ <%= products[i].regularPrice %> /kg</p>
                                              <% } %>
                              
                                              <a href="#" onclick="addToWishlist(event, '<%= products[i]._id %>')" class="btn border border-secondary rounded-pill px-3 text-primary me-2">
                                                <i class="fa fa-heart text-primary" style="color: #FFB524;"></i>
                                              </a>
                                            </div>
                                            <br>
                                            <div class="d-flex justify-content-center">
                                                <a href="#" onclick="addToCart(event, '<%= products[i]._id %>')" class="btn border border-secondary rounded-pill px-3 text-primary">
                                                  <i class="fa fa-shopping-bag me-2 text-primary"></i> Add to cart
                                                </a>
                                            </div>
                                              
                                          </div>
                                        </div>
                                      </div>
                              
                                    <% } %>
                                  <% } %>
                                </div>
                                <br>
                                <!-- Pagination controls -->
                                <div class="row">
                                  <div class="col">
                                    <nav aria-label="Product Pagination" class="pagination-container">
                                      <ul id="product-pagination" class="pagination">
                                        <!-- Pagination links will be added dynamically -->
                                      </ul>
                                    </nav>
                                  </div>
                                </div>
                            </div>
                              
                              
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="product-list" class="row">
          <!-- Product items will be inserted here -->
        </div>

        <style>
            .pagination-container {
              display: flex;
              justify-content: center;
              align-items: center;
            }
          
            .pagination {
              display: flex;
              justify-content: center;
              list-style: none;
              padding: 0;
            }
          
            .pagination .page-item {
              margin: 0 5px;
            }
          
            .pagination .page-link {
             color: #81c408;
             text-decoration: none;
            }

           .pagination .page-item.active .page-link {
            background-color: #ffb524 ;
            color: white;
            }
          </style>
        <!-- Fruits Shop End-->

<!-----------------Script for pagination------------------------->

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
  $(document).ready(function() {
    const itemsPerPage = 9;
    const $productItems = $('.product-item');
    const totalItems = $productItems.length;
    const totalPages = Math.ceil(totalItems / itemsPerPage);

    function showPage(pageNum) {
      $productItems.hide();
      const startIndex = (pageNum - 1) * itemsPerPage;
      const endIndex = startIndex + itemsPerPage;
      $productItems.slice(startIndex, endIndex).show();

      $('#product-pagination').find('li.page-item').removeClass('active');
      $(`#product-pagination li.page-item[data-page="${pageNum}"]`).addClass('active');
    }

    function generatePagination() {
      let paginationHTML = '';
      for (let i = 1; i <= totalPages; i++) {
        paginationHTML += `<li class="page-item" data-page="${i}"><a class="page-link" href="#">${i}</a></li>`;
      }
      $('#product-pagination').html(paginationHTML);
      $('#product-pagination li.page-item:first').addClass('active');
    }

    generatePagination();
    showPage(1);

    $(document).on('click', '#product-pagination .page-link', function(e) {
      e.preventDefault();
      const pageNum = $(this).parent().data('page');
      showPage(pageNum);
    });
  });
</script>

<script>
  $(document).ready(function() {
    var itemsPerPage = 9; // Number of items per page
    var products = []; // Store the products here

    // Function to display items for a given page number
    function showPage(pageNum) {
      $('.product-item').hide(); // Hide all product items
      var startIndex = (pageNum - 1) * itemsPerPage;
      var endIndex = startIndex + itemsPerPage - 1;
      $('.product-item').slice(startIndex, endIndex + 1).show(); // Show items for the current page

      // Update active state in pagination
      $('#product-pagination').find('li.page-item').removeClass('active');
      $('#product-pagination').find('li.page-item[data-page="' + pageNum + '"]').addClass('active');
    }

    // Generate pagination links based on number of items
    function generatePagination() {
      var numPages = Math.ceil(products.length / itemsPerPage);
      var paginationHTML = '';
      for (var i = 1; i <= numPages; i++) {
        paginationHTML += '<li class="page-item" data-page="' + i + '"><a class="page-link" href="#">' + i + '</a></li>';
      }
      $('#product-pagination').html(paginationHTML);
      $('#product-pagination').find('li.page-item:first').addClass('active'); // Set first page as active initially
    }

 

    // Function to update products list and pagination
    function updateProducts(newProducts) {
      products = newProducts;
      const productList = $('#product-list');
      productList.empty();

      products.forEach(product => {
        const productHtml = `
          <div class="col-md-6 col-lg-6 col-xl-4 product-item">
            <div class="rounded position-relative fruite-item">
              <div class="fruite-img">
                <a href="/productDetails/${product._id}">
                  <img src="/uploads/${product.image[0]}" class="img-fluid w-100 rounded-top" alt="product-img">
                </a>
              </div>
              <div class="text-white bg-secondary px-3 py-1 rounded position-absolute" style="top: 10px; left: 10px;">
                ${product.category.name}
              </div>
              <div class="p-4 border border-secondary border-top-0 rounded-bottom">
                <a href="/productDetails/${product._id}">
                  <h4>${product.title}</h4>
                </a>
                <p>${product.description}</p>
                <div class="d-flex justify-content-between flex-lg-wrap">
                  ${
                    product.salesPrice && product.salesPrice < product.regularPrice
                      ? `<p class="text-dark fs-5 fw-bold mb-0">
                           <span class="text-muted text-decoration-line-through">₹ ${product.regularPrice.toFixed(2)}</span>
                           ₹ ${product.salesPrice.toFixed(2)} /kg
                         </p>`
                      : `<p class="text-dark fs-5 fw-bold mb-0">₹ ${product.regularPrice.toFixed(2)} /kg</p>`
                  }
                  <a onclick="addToWishlist('${product._id}')" class="btn border border-secondary rounded-pill px-3 text-primary me-2">
                    <i class="fa fa-heart text-primary" style="color: #FFB524;"></i>
                  </a>
                </div>
                <br>
                <div class="d-flex justify-content-center">
                 <a href="#" onclick="addToCart(event, '${product._id}')" class="btn border border-secondary rounded-pill px-3 text-primary">
                  <i class="fa fa-shopping-bag me-2 text-primary"></i> Add to cart
                 </a>
                </div>
              </div>
            </div>
          </div>
        `;
        productList.append(productHtml);
      });

      generatePagination(); // Update pagination after products update
      showPage(1); // Show the first page of items
    }

   

    // Filter by price
    document.getElementById('rangeInput').addEventListener('input', async function(event) {
      const priceValue = event.target.value;
      try {
        const response = await fetch(`/shop/filter?price=${priceValue}`, {
          headers: { 'Accept': 'application/json' }
        });

        if (response.ok) {
          const data = await response.json();
          updateProducts(data.products);
        } else {
          console.error('Failed to fetch filtered products');
        }
      } catch (error) {
        console.error('Error:', error);
      }
    });

    // Search functionality
    document.getElementById('shop-search-input').addEventListener('keyup', function(event) {
      if (event.key === 'Enter') {
        performSearch(shopSearchInput.value.trim());
      }
    });

    document.getElementById('shop-search-button').addEventListener('click', function() {
      performSearch(shopSearchInput.value.trim());
    });

    async function performSearch(query) {
      if (query.length > 0) {
        try {
          const response = await fetch(`/shop/search?productName=${encodeURIComponent(query)}`, {
            headers: { 'Accept': 'application/json' }
          });

          if (response.ok) {
            const data = await response.json();
            updateProducts(data.products);
          } else {
            console.error('Failed to fetch search results');
          }
        } catch (error) {
          console.error('Error:', error);
        }
      } else {
        updateProducts([]);  // Clear product list if query is empty
      }
    }

    // Sort functionality
    document.getElementById('sort').addEventListener('change', async function(event) {
      const sortValue = event.target.value;
      try {
        const response = await fetch(`/shop/sort?sort=${sortValue}`, {
          headers: { 'Accept': 'application/json' }
        });

        if (response.ok) {
          const data = await response.json();
          updateProducts(data.products);
        } else {
          console.error('Failed to fetch sorted products');
        }
      } catch (error) {
        console.error('Error:', error);
      }
    });

    // Filter by category
    document.querySelectorAll('.category-filter').forEach(item => {
      item.addEventListener('click', async function(event) {
        event.preventDefault();
        const categoryId = event.target.dataset.categoryId;
        try {
          const response = await fetch(`/shop/filterByCategory?category=${categoryId}`, {
            headers: { 'Accept': 'application/json' }
          });

          if (response.ok) {
            const data = await response.json();
            updateProducts(data.products);
          } else {
            console.error('Failed to fetch filtered products');
          }
        } catch (error) {
          console.error('Error:', error);
        }
      });
    });
  });
</script>


<!-- Include Toastr CSS and JS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet"/>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

<script>
  function addToCart(event, productId) {
    event.preventDefault(); // Prevent the default link behavior
    const quantity = 1; // Set default quantity or get it dynamically if needed

    fetch('/mycart', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ productId, quantity })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        toastr.success(data.message || 'Product added to cart successfully');
      } else {
        toastr.error(data.message || 'Failed to add product to cart');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      toastr.error('Failed to add product to cart');
    });
  }

    function addToWishlist(event, productId) {
      event.preventDefault(); // Prevent the default link behavior
      
      fetch(`/wishlist/add/${productId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          toastr.success('Product added to wishlist');
          // Optionally reload or update part of the page if needed
        } else {
          toastr.error(data.message || 'Failed to move product to wishlist');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        toastr.error('Failed to move product to wishlist');
      });
    }
  </script>
  

        <script>
        document.getElementById('sort').addEventListener('change', async function(event) {
            const sortValue = event.target.value;
            try {
                const response = await fetch(`/shop/sort?sort=${sortValue}`, {
                    headers: { 'Accept': 'application/json' }
                });
    
                if (response.ok) {
                    const data = await response.json();
                    updateProducts(data.products);
                } else {
                    console.error('Failed to fetch sorted products');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        });
    
        function updateProducts(products) {
            const productList = document.getElementById('product-list');
            productList.innerHTML = '';
    
            products.forEach(product => {
    const productHtml = `
        <div class="col-md-6 col-lg-6 col-xl-4">
            <div class="rounded position-relative fruite-item">
                <div class="fruite-img">
                    <a href="/productDetails/${product._id}">
                        <img src="/uploads/${product.image[0]}" class="img-fluid w-100 rounded-top" alt="product-img">
                    </a>
                </div>
                <div class="text-white bg-secondary px-3 py-1 rounded position-absolute" style="top: 10px; left: 10px;">
                    ${product.category.name}
                </div>
                <div class="p-4 border border-secondary border-top-0 rounded-bottom">
                    <a href="/productDetails/${product._id}">
                        <h4>${product.title}</h4>
                    </a>
                    <p>${product.description}</p>
                    <div class="d-flex justify-content-between flex-lg-wrap">
                        ${
                          product.salesPrice && product.salesPrice < product.regularPrice
                            ? `<p class="text-dark fs-5 fw-bold mb-0">
                                 <span class="text-muted text-decoration-line-through">₹ ${product.regularPrice.toFixed(2)}</span>
                                 ₹ ${product.salesPrice.toFixed(2)} /kg
                               </p>`
                            : `<p class="text-dark fs-5 fw-bold mb-0">₹ ${product.regularPrice.toFixed(2)} /kg</p>`
                        }
                        <a onclick="addToWishlist('${product._id}')" class="btn border border-secondary rounded-pill px-3 text-primary me-2">
                            <i class="fa fa-heart text-primary" style="color: #FFB524;"></i>
                        </a>
                    </div>
                    <br>
                <div class="d-flex justify-content-center">
                 <a href="#" onclick="addToCart(event, '${product._id}')" class="btn border border-secondary rounded-pill px-3 text-primary">
                  <i class="fa fa-shopping-bag me-2 text-primary"></i> Add to cart
                 </a>
                </div>
                </div>
            </div>
        </div>
    `;
    productList.insertAdjacentHTML('beforeend', productHtml);
});

        }

</script>
<script>
  document.addEventListener('DOMContentLoaded', async function() {
    const shopSearchInput = document.getElementById('shop-search-input');
    const shopSearchButton = document.getElementById('shop-search-button');
  
    // Function to perform search
    async function performSearch(query) {
      if (query.length > 0) {
        try {
          const response = await fetch(`/shop/search?productName=${encodeURIComponent(query)}`, {
            headers: { 'Accept': 'application/json' }
          });
  
          if (response.ok) {
            const data = await response.json();
            updateProducts(data.products);
          } else {
            console.error('Failed to fetch search results');
          }
        } catch (error) {
          console.error('Error:', error);
        }
      } else {
        await fetchDefaultProducts();  // Fetch default products if query is empty
      }
    }
  
    // Function to update products list
    function updateProducts(products) {
      const productList = document.getElementById('product-list');
      if (!productList) {
        console.error('Product list element not found');
        return;
      }
      productList.innerHTML = '';
  
      if (products.length === 0) {
        productList.innerHTML = '<p class="text-center">Product not available</p>';
        return;
      }
  
      products.forEach(product => {
        const productHtml = `
          <div class="col-md-6 col-lg-6 col-xl-4">
            <div class="rounded position-relative fruite-item">
              <div class="fruite-img">
                <a href="/productDetails/${product._id}">
                  <img src="/uploads/${product.image[0]}" class="img-fluid w-100 rounded-top" alt="product-img">
                </a>
              </div>
              <div class="text-white bg-secondary px-3 py-1 rounded position-absolute" style="top: 10px; left: 10px;">
                ${product.category.name}
              </div>
              <div class="p-4 border border-secondary border-top-0 rounded-bottom">
                <a href="/productDetails/${product._id}">
                  <h4>${product.title}</h4>
                </a>
                <p>${product.description}</p>
                <div class="d-flex justify-content-between flex-lg-wrap">
                  ${
                    product.salesPrice && product.salesPrice < product.regularPrice
                      ? `<p class="text-dark fs-5 fw-bold mb-0">
                           <span class="text-muted text-decoration-line-through">₹ ${product.regularPrice.toFixed(2)}</span>
                           ₹ ${product.salesPrice.toFixed(2)} /kg
                         </p>`
                      : `<p class="text-dark fs-5 fw-bold mb-0">₹ ${product.regularPrice.toFixed(2)} /kg</p>`
                  }
                  <a onclick="addToWishlist('${product._id}')" class="btn border border-secondary rounded-pill px-3 text-primary me-2">
                    <i class="fa fa-heart text-primary" style="color: #FFB524;"></i>
                  </a>
                </div>
                <br>
                <div class="d-flex justify-content-center">
                 <a href="#" onclick="addToCart(event, '${product._id}')" class="btn border border-secondary rounded-pill px-3 text-primary">
                  <i class="fa fa-shopping-bag me-2 text-primary"></i> Add to cart
                 </a>
                </div>
              </div>
            </div>
          </div>
        `;
        productList.insertAdjacentHTML('beforeend', productHtml);
      });
    }
  
    // Function to fetch default products
    async function fetchDefaultProducts() {
      try {
        const response = await fetch('/shopPage', {
          headers: { 'Accept': 'application/json' }
        });
  
        if (response.ok) {
          const data = await response.json();
          updateProducts(data.products);
        } else {
          console.error('Failed to fetch default products');
        }
      } catch (error) {
        console.error('Error:', error);
      }
    }
  
    // Read search query from URL and perform search
    function getQueryParam(name) {
      const urlParams = new URLSearchParams(window.location.search);
      return urlParams.get(name);
    }
  
    const searchQuery = getQueryParam('productName');
    if (searchQuery) {
      shopSearchInput.value = searchQuery;
      await performSearch(searchQuery);
    }
  
    // Search when user types in the input field
    shopSearchInput.addEventListener('input', function() {
      performSearch(shopSearchInput.value.trim());
    });
  
    // Search when user clicks the search button
    shopSearchButton.addEventListener('click', function() {
      performSearch(shopSearchInput.value.trim());
    });
  });
  </script>



<!------------------------ Filter Price --------------------------------->


<script>
    document.getElementById('rangeInput').addEventListener('input', async function(event) {
    const priceValue = event.target.value;
    try {
        const response = await fetch(`/shop/filter?price=${priceValue}`, {
            headers: { 'Accept': 'application/json' }
        });

        if (response.ok) {
            const data = await response.json();
            updateProducts(data.products);
        } else {
            console.error('Failed to fetch filtered products');
        }
    } catch (error) {
        console.error('Error:', error);
    }
});

function updateProducts(products) {
    const productList = document.getElementById('product-list');
    productList.innerHTML = '';

    products.forEach(product => {
    const productHtml = `
        <div class="col-md-6 col-lg-6 col-xl-4">
            <div class="rounded position-relative fruite-item">
                <div class="fruite-img">
                    <a href="/productDetails/${product._id}">
                        <img src="/uploads/${product.image[0]}" class="img-fluid w-100 rounded-top" alt="product-img">
                    </a>
                </div>
                <div class="text-white bg-secondary px-3 py-1 rounded position-absolute" style="top: 10px; left: 10px;">
                    ${product.category.name}
                </div>
                <div class="p-4 border border-secondary border-top-0 rounded-bottom">
                    <a href="/productDetails/${product._id}">
                        <h4>${product.title}</h4>
                    </a>
                    <p>${product.description}</p>
                    <div class="d-flex justify-content-between flex-lg-wrap">
                        ${
                          product.salesPrice && product.salesPrice < product.regularPrice
                            ? `<p class="text-dark fs-5 fw-bold mb-0">
                                 <span class="text-muted text-decoration-line-through">₹ ${product.regularPrice.toFixed(2)}</span>
                                 ₹ ${product.salesPrice.toFixed(2)} /kg
                               </p>`
                            : `<p class="text-dark fs-5 fw-bold mb-0">₹ ${product.regularPrice.toFixed(2)} /kg</p>`
                        }
                        <a onclick="addToWishlist('${product._id}')" class="btn border border-secondary rounded-pill px-3 text-primary me-2">
                            <i class="fa fa-heart text-primary" style="color: #FFB524;"></i>
                        </a>
                    </div>
                    <br>
                <div class="d-flex justify-content-center">
                 <a href="#" onclick="addToCart(event, '${product._id}')" class="btn border border-secondary rounded-pill px-3 text-primary">
                  <i class="fa fa-shopping-bag me-2 text-primary"></i> Add to cart
                 </a>
                </div>
                </div>
            </div>
        </div>
    `;
    productList.insertAdjacentHTML('beforeend', productHtml);
});

}


//category search


document.querySelectorAll('.category-filter').forEach(item => {
    item.addEventListener('click', async function(event) {
        event.preventDefault();
        const categoryId = event.target.dataset.categoryId;
        try {
            const response = await fetch(`/shop/filterByCategory?category=${categoryId}`, {
                headers: { 'Accept': 'application/json' }
            });

            if (response.ok) {
                const data = await response.json();
                updateProducts(data.products);
            } else {
                console.error('Failed to fetch filtered products');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    });
});

function updateProducts(products) {
    const productList = document.getElementById('product-list');
    productList.innerHTML = '';

    products.forEach(product => {
    const productHtml = `
        <div class="col-md-6 col-lg-6 col-xl-4">
            <div class="rounded position-relative fruite-item">
                <div class="fruite-img">
                    <a href="/productDetails/${product._id}">
                        <img src="/uploads/${product.image[0]}" class="img-fluid w-100 rounded-top" alt="product-img">
                    </a>
                </div>
                <div class="text-white bg-secondary px-3 py-1 rounded position-absolute" style="top: 10px; left: 10px;">
                    ${product.category.name}
                </div>
                <div class="p-4 border border-secondary border-top-0 rounded-bottom">
                    <a href="/productDetails/${product._id}">
                        <h4>${product.title}</h4>
                    </a>
                    <p>${product.description}</p>
                    <div class="d-flex justify-content-between flex-lg-wrap">
                        ${
                          product.salesPrice && product.salesPrice < product.regularPrice
                            ? `<p class="text-dark fs-5 fw-bold mb-0">
                                 <span class="text-muted text-decoration-line-through">₹ ${product.regularPrice.toFixed(2)}</span>
                                 ₹ ${product.salesPrice.toFixed(2)} /kg
                               </p>`
                            : `<p class="text-dark fs-5 fw-bold mb-0">₹ ${product.regularPrice.toFixed(2)} /kg</p>`
                        }
                        <a onclick="addToWishlist('${product._id}')" class="btn border border-secondary rounded-pill px-3 text-primary me-2">
                            <i class="fa fa-heart text-primary" style="color: #FFB524;"></i>
                        </a>
                    </div>
                    <br>
                <div class="d-flex justify-content-center">
                 <a href="#" onclick="addToCart(event, '${product._id}')" class="btn border border-secondary rounded-pill px-3 text-primary">
                  <i class="fa fa-shopping-bag me-2 text-primary"></i> Add to cart
                 </a>
                </div>
                </div>
            </div>
        </div>
    `;
    productList.insertAdjacentHTML('beforeend', productHtml);
});

}

</script>


        <%- include('../Layouts/footer.ejs') %>